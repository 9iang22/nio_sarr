{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line tainted-sql-string-ok-1.java:2:\n `ResultSet ok4(@RequestBody Boolean name) {` was unexpected", "path": "tainted-sql-string-ok-1.java", "spans": [{"end": {"col": 47, "line": 2, "offset": 42}, "file": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 2, "offset": 0}}, {"end": {"col": 6, "line": 10, "offset": 1}, "file": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 10, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 47, "line": 2, "offset": 42}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 2, "offset": 0}}, {"end": {"col": 6, "line": 10, "offset": 1}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 10, "offset": 0}}]]}], "explanations": [{"children": [{"children": [{"children": [{"children": [{"children": [{"children": [], "loc": {"end": {"col": 99, "line": 122, "offset": 3847}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 122, "offset": 3785}}, "matches": [], "op": ["XPat", "$METHODNAME(..., @$REQ(...) $TYPE $SOURCE,...) {\n  ...\n}\n"]}], "loc": {"end": {"col": 35, "line": 122, "offset": 3783}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 19, "line": 122, "offset": 3767}}, "matches": [], "op": "Inside"}, {"children": [{"children": [], "loc": {"end": {"col": 94, "line": 125, "offset": 3978}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 125, "offset": 3921}}, "matches": [], "op": ["XPat", "$METHODNAME(..., @$REQ $TYPE $SOURCE,...) {\n  ...\n}\n"]}], "loc": {"end": {"col": 35, "line": 125, "offset": 3919}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 19, "line": 125, "offset": 3903}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 31, "line": 120, "offset": 3727}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 120, "offset": 3711}}, "matches": [], "op": "Or"}, {"children": [], "loc": {"end": {"col": 35, "line": 130, "offset": 4076}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 130, "offset": 4056}}, "matches": [], "op": ["Filter", "\"metavariable-regex\""]}, {"children": [], "loc": {"end": {"col": 35, "line": 136, "offset": 4292}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 136, "offset": 4272}}, "matches": [], "op": ["Filter", "\"metavariable-regex\""]}, {"children": [], "loc": {"end": {"col": 35, "line": 142, "offset": 4524}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 142, "offset": 4504}}, "matches": [], "op": ["Filter", "metavariable-focus"]}], "extra": {"before_filter_matches": ["Some", []], "before_negation_matches": ["Some", []]}, "loc": {"end": {"col": 21, "line": 118, "offset": 3679}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 11, "line": 118, "offset": 3669}}, "matches": [], "op": "And"}], "loc": {"end": {"col": 24, "line": 116, "offset": 3645}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 7, "line": 116, "offset": 3628}}, "matches": [], "op": "TaintSource"}, {"children": [{"children": [{"children": [{"children": [], "loc": {"end": {"col": 51, "line": 46, "offset": 1609}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 30, "line": 46, "offset": 1588}}, "matches": [], "op": ["XPat", "\"$SQLSTR\" + ...\n"]}, {"children": [], "loc": {"end": {"col": 57, "line": 49, "offset": 1703}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 30, "line": 49, "offset": 1676}}, "matches": [], "op": ["XPat", "\"$SQLSTR\".concat(...)\n"]}, {"children": [{"children": [], "loc": {"end": {"col": 51, "line": 57, "offset": 1991}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 34, "line": 57, "offset": 1974}}, "matches": [], "op": ["XPat", "$SB.append(...)"]}, {"children": [{"children": [], "loc": {"end": {"col": 101, "line": 54, "offset": 1895}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 41, "line": 54, "offset": 1835}}, "matches": [], "op": ["XPat", "StringBuilder $SB = new StringBuilder(\"$SQLSTR\");\n...\n"]}], "loc": {"end": {"col": 39, "line": 54, "offset": 1833}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 23, "line": 54, "offset": 1817}}, "matches": [], "op": "Inside"}], "extra": {"before_filter_matches": "None", "before_negation_matches": ["Some", []]}, "loc": {"end": {"col": 29, "line": 52, "offset": 1769}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 19, "line": 52, "offset": 1759}}, "matches": [], "op": "And"}, {"children": [{"children": [], "loc": {"end": {"col": 47, "line": 67, "offset": 2285}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 34, "line": 67, "offset": 2272}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": ["XPat", "$VAR += ..."]}, {"children": [{"children": [], "loc": {"end": {"col": 69, "line": 64, "offset": 2193}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 41, "line": 64, "offset": 2165}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 18, "line": 9, "offset": 475}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 19, "line": 3, "offset": 159}, "start": {"col": 16, "line": 3, "offset": 156}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 1, "offset": 4}}], "op": ["XPat", "$VAR = \"$SQLSTR\";\n...\n"]}], "loc": {"end": {"col": 39, "line": 64, "offset": 2163}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 23, "line": 64, "offset": 2147}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 18, "line": 9, "offset": 475}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 19, "line": 3, "offset": 159}, "start": {"col": 16, "line": 3, "offset": 156}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 1, "offset": 4}}], "op": "Inside"}], "extra": {"before_filter_matches": "None", "before_negation_matches": ["Some", [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}]]}, "loc": {"end": {"col": 29, "line": 62, "offset": 2099}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 19, "line": 62, "offset": 2089}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "And"}, {"children": [], "loc": {"end": {"col": 63, "line": 72, "offset": 2427}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 30, "line": 72, "offset": 2394}}, "matches": [], "op": ["XPat", "String.format(\"$SQLSTR\", ...)"]}, {"children": [{"children": [], "loc": {"end": {"col": 60, "line": 80, "offset": 2699}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 34, "line": 80, "offset": 2673}}, "matches": [], "op": ["XPat", "String.format($VAR, ...)"]}, {"children": [{"children": [], "loc": {"end": {"col": 76, "line": 77, "offset": 2594}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 41, "line": 77, "offset": 2559}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 18, "line": 9, "offset": 475}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 19, "line": 3, "offset": 159}, "start": {"col": 16, "line": 3, "offset": 156}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 1, "offset": 4}}], "op": ["XPat", "String $VAR = \"$SQLSTR\";\n...\n"]}], "loc": {"end": {"col": 39, "line": 77, "offset": 2557}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 23, "line": 77, "offset": 2541}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 18, "line": 9, "offset": 475}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 19, "line": 3, "offset": 159}, "start": {"col": 16, "line": 3, "offset": 156}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 5, "line": 1, "offset": 4}}], "op": "Inside"}], "extra": {"before_filter_matches": "None", "before_negation_matches": ["Some", []]}, "loc": {"end": {"col": 29, "line": 75, "offset": 2493}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 19, "line": 75, "offset": 2483}}, "matches": [], "op": "And"}], "loc": {"end": {"col": 31, "line": 44, "offset": 1537}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 44, "offset": 1521}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Or"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 62, "line": 87, "offset": 2866}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 87, "offset": 2841}}, "matches": [], "op": ["XPat", "System.out.println(...)"]}], "loc": {"end": {"col": 35, "line": 87, "offset": 2839}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 87, "offset": 2819}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 87, "offset": 2839}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 87, "offset": 2819}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 53, "line": 90, "offset": 2948}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 90, "offset": 2932}}, "matches": [], "op": ["XPat", "$LOG.info(...)"]}], "loc": {"end": {"col": 35, "line": 90, "offset": 2930}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 90, "offset": 2910}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 90, "offset": 2930}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 90, "offset": 2910}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 53, "line": 93, "offset": 3030}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 93, "offset": 3014}}, "matches": [], "op": ["XPat", "$LOG.warn(...)"]}], "loc": {"end": {"col": 35, "line": 93, "offset": 3012}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 93, "offset": 2992}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 93, "offset": 3012}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 93, "offset": 2992}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 56, "line": 96, "offset": 3115}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 96, "offset": 3096}}, "matches": [], "op": ["XPat", "$LOG.warning(...)"]}], "loc": {"end": {"col": 35, "line": 96, "offset": 3094}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 96, "offset": 3074}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 96, "offset": 3094}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 96, "offset": 3074}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 54, "line": 99, "offset": 3198}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 99, "offset": 3181}}, "matches": [], "op": ["XPat", "$LOG.debug(...)"]}], "loc": {"end": {"col": 35, "line": 99, "offset": 3179}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 99, "offset": 3159}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 99, "offset": 3179}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 99, "offset": 3159}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 58, "line": 102, "offset": 3285}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 102, "offset": 3264}}, "matches": [], "op": ["XPat", "$LOG.debugging(...)"]}], "loc": {"end": {"col": 35, "line": 102, "offset": 3262}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 102, "offset": 3242}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 102, "offset": 3262}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 102, "offset": 3242}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [{"children": [{"children": [], "loc": {"end": {"col": 54, "line": 105, "offset": 3368}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 37, "line": 105, "offset": 3351}}, "matches": [], "op": ["XPat", "$LOG.error(...)"]}], "loc": {"end": {"col": 35, "line": 105, "offset": 3349}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 105, "offset": 3329}}, "matches": [], "op": "Inside"}], "loc": {"end": {"col": 35, "line": 105, "offset": 3349}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 105, "offset": 3329}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "Negation"}, {"children": [], "loc": {"end": {"col": 35, "line": 108, "offset": 3432}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 15, "line": 108, "offset": 3412}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": ["Filter", "\"metavariable-regex\""]}], "extra": {"before_filter_matches": ["Some", [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}, {"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}]], "before_negation_matches": ["Some", [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}]]}, "loc": {"end": {"col": 21, "line": 42, "offset": 1489}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 11, "line": 42, "offset": 1479}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}, {"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "And"}], "loc": {"end": {"col": 22, "line": 40, "offset": 1455}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 7, "line": 40, "offset": 1440}}, "matches": [{"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}, {"check_id": "tainted-sql-string", "end": {"col": 26, "line": 5, "offset": 258}, "extra": {"engine_kind": "OSS", "is_ignored": false, "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "subcategory": ["vuln"], "technology": ["spring"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$SQLSTR": {"abstract_content": "SELECT * FROM table WHERE name = ", "end": {"col": 56, "line": 3, "offset": 196}, "start": {"col": 23, "line": 3, "offset": 163}}, "$VAR": {"abstract_content": "sql", "end": {"col": 12, "line": 5, "offset": 244}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM table WHERE name = \"", "svalue_end": {"col": 57, "line": 3, "offset": 197}, "svalue_start": {"col": 22, "line": 3, "offset": 162}}, "start": {"col": 9, "line": 5, "offset": 241}}}, "validation_state": "NO_VALIDATOR"}, "path": "tainted-sql-string-ok-1.java", "start": {"col": 9, "line": 5, "offset": 241}}], "op": "TaintSink"}], "loc": {"end": {"col": 33, "line": 4, "offset": 53}, "path": "/tmp/tmp7adj5jv_.json", "start": {"col": 13, "line": 4, "offset": 33}}, "matches": [], "op": "Taint"}], "interfile_languages_used": [], "paths": {"scanned": ["tainted-sql-string-ok-1.java"]}, "results": [], "skipped_rules": [], "version": "1.90.0"}
